// <auto-generated />
using ASP_project.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP_project.Migrations
{
    [DbContext(typeof(ASP_projectContext))]
    [Migration("20220829162221_AddedIngredientList")]
    partial class AddedIngredientList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP_project.Entities.Details", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId")
                        .IsUnique()
                        .HasFilter("[RecipeId] IS NOT NULL");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("ASP_project.Entities.Ingredient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IngredientListId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientListId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ASP_project.Entities.IngredientList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("IngredientList");
                });

            modelBuilder.Entity("ASP_project.Entities.IngredientRecipe", b =>
                {
                    b.Property<string>("IngredientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecipeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientRecipes");
                });

            modelBuilder.Entity("ASP_project.Entities.Recipe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipeListId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeListId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ASP_project.Entities.RecipeList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("RecipeList");
                });

            modelBuilder.Entity("ASP_project.Entities.Details", b =>
                {
                    b.HasOne("ASP_project.Entities.Recipe", "Recipe")
                        .WithOne("Details")
                        .HasForeignKey("ASP_project.Entities.Details", "RecipeId");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ASP_project.Entities.Ingredient", b =>
                {
                    b.HasOne("ASP_project.Entities.IngredientList", "IngredientList")
                        .WithMany("Ingredients")
                        .HasForeignKey("IngredientListId");

                    b.Navigation("IngredientList");
                });

            modelBuilder.Entity("ASP_project.Entities.IngredientRecipe", b =>
                {
                    b.HasOne("ASP_project.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientRecipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP_project.Entities.Recipe", "Recipe")
                        .WithMany("IngredientRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ASP_project.Entities.Recipe", b =>
                {
                    b.HasOne("ASP_project.Entities.RecipeList", "RecipeList")
                        .WithMany("Recipes")
                        .HasForeignKey("RecipeListId");

                    b.Navigation("RecipeList");
                });

            modelBuilder.Entity("ASP_project.Entities.Ingredient", b =>
                {
                    b.Navigation("IngredientRecipes");
                });

            modelBuilder.Entity("ASP_project.Entities.IngredientList", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("ASP_project.Entities.Recipe", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("IngredientRecipes");
                });

            modelBuilder.Entity("ASP_project.Entities.RecipeList", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
